name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  windows-build:
    name: Windows
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v3

    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 6f29f12e82a8293156836ad81cc9bf5af41fe836

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -S ${{github.workspace}}/src

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  ubuntu-gcc-9-build:
    name: Ubuntu 20.04 with G++ 9
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 6f29f12e82a8293156836ad81cc9bf5af41fe836

    - name: Install Ubuntu Packages
      run: |
        sudo apt install ninja-build

    - name: Configure CMake
      run: CXX=g++-9 cmake -B ${{github.workspace}}/build -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -GNinja -S ${{github.workspace}}/src

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  ubuntu-build:
    name: Ubuntu 24.04 with G++ 12 (Qt GUI)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 6f29f12e82a8293156836ad81cc9bf5af41fe836

    - name: Install Ubuntu Packages
      run: |
        sudo apt update --fix-missing
        sudo apt install qt6-base-dev libgl1-mesa-dev xvfb ninja-build
    - name: Configure CMake
      run: CXX=g++-12 cmake -B ${{github.workspace}}/build -DBUILD_GUI=ON -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -GNinja -S ${{github.workspace}}/src

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test (including GUI tests)
      uses: coactions/setup-xvfb@v1
      with:
        run: ctest -C ${{env.BUILD_TYPE}}
        working-directory: ${{github.workspace}}/build


  ubuntu-build-webapp:
    name: Ubuntu 24.04 (Webapp)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: mymindstorm/setup-emsdk@v14

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: 6f29f12e82a8293156836ad81cc9bf5af41fe836

    - name: Install Ubuntu Packages
      run: |
        sudo apt update --fix-missing
        sudo apt install ninja-build

    - name: Configure CMake
      run: |
        cmake \
          -B ${{github.workspace}}/build \
          -DBUILD_WEBAPP=ON \
          -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/vcpkg/scripts/buildsystems/vcpkg.cmake \
          -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} \
          -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=${EMSDK}/upstream/emscripten/cmake/Modules/Platform/Emscripten.cmake \
          -GNinja \
          -DVCPKG_TARGET_TRIPLET=wasm32-emscripten \
          -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/webapp/ \
          -S ${{github.workspace}}/src

    - name: Build
      run: |
        cmake \
          --build ${{github.workspace}}/build \
          --config ${{env.BUILD_TYPE}} \
          --target webapp

    - name: Install
      run: cmake --install ${{github.workspace}}/build/webapp/

    - name: Upload
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{github.workspace}}/webapp/

  deploy-webapp:
    name: Deploy Webapp
    runs-on: ubuntu-latest
    needs: ubuntu-build-webapp

    # Only deploy for pushes, not PRs
    if: github.ref == 'refs/heads/main'

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

